quit
define_method
define_method(http_method) do |a,b,c| p [a, b, c] end 
define_method(http_method) do |a,b,c| p [a, b, c]
define_method(http_method) do |a,b,c| p "#{a, b, c}" end
define_method(http_method) do |a,b,c| p "#{a, b, c}"
http_method
self
quit
req.path =~ self.pattern
req.path =~ /[self.pattern]/
req.path =~ /self.pattern/
req.path =~ "self.pattern"
self.pattern
req.path
req.path =~ self.pattern
self.pattern =~ req.path
a = _
self.pattern
self
quit
y
quit
req.path
req
self.pattern
self
req
    "#{self.http_method}".downcase == "#{req.request_method}".downcase
req.request_method =~ self.http_method
req.request_method == self.http_method
req.request_method
req.env
req.http_method
req
self.http_method
self.method
req.pattern
req
self
quit
content
self
current
quit
@cookies_hash[key] = val
@cookies_hash.key = val
@cookies_hash.key = va
@cookies_hash[key]
val
key
quit
self
self.cookies_hash
self
@cookies_hash
self[key]
self.key
self
quit
req.cookies['_rails_lite_app']
req.cookies
req
quit
self
n
@cookies_hash
req
quit
@cookies_hash[key]
@cookies_hash[key] = 1
@cookies_hash[key]
@cookies_hash.keys
@cookies_hash.key
@cookies_hash[key]
self.key
self
key
quit
res
quit
JSON.parse(req.cookies['_rails_lite_app'])
quit
y
quit
res
res.cookie
res.cookies
res
quit
y
quit
y
quit
k
v
k,v
v
k
req
quit
req.cookies['_rails_lite_app']
req.cookies['rails_lite_app']
req.cookies
req.cookies[rails_lite_app]
req.cookies._rails_lite_app
req.cookies._rails_lite_app.
req.cookies[_rails_lite_app]
req.cookies
req
self
@cookies_hash
quit
req.cookies_hash
req.cookies
req
JSON.parse(req.env["rack.request.cookie_hash"])
)
JSON.parse(req.env["rack.request.cookie_hash"]
JSON.parse(req.env)
req.env
req
JSON.parse(req.body)
JSON.parse(req)
req
quit
req.env."rack.request.cookie_hash"
req.env.rack.request.cookie_hash
req.env._rails_lite_app
req.env
req[env]
req
req._rails_lite_app
req[_rails_lite_app]
req
quit
@res[@body]
@res[body]
@res.body
@res
quit
@res.body += content
@res.body
@res
quit
@res.response_status
@res.header[location]
@res.header.location
@res.header
self
@req
@res
@res[location]
@res.location
@rest.location
@res
